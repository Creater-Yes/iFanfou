//
//  UIHomeViewController.swift
//  TRSMobile
//
//  Created by tung on 16/1/8.
//  Copyright © 2016年 trs. All rights reserved.
//
import Alamofire
import UIKit

class UIHomeViewController: BaseViewController,BaseTableViewDelegate,MGSwipeTableCellDelegate {
    
    var gDataChannel : NSMutableArray?
    
    var gViewContent = BaseTableViewController()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        FanFouAuthManger.isFanFouAuthed()
        // Do any additional setup after loading the view.
    }
    
    override func initContentView() {
        
        setNavBarButton(NAV.LEFT, string:"消息")
        setNavBarButton(NAV.RIGHT, string:"toolbar_compose_highlighted.png")
        setNavTitle("首页")
        
        gViewContent.gTableUrl = KURLAppHomeTimeLine
        gViewContent.delegate = self;
        gViewContent.gTableAutoHeight = true
        gViewContent.gTableCellName = "FanFouCellView"
        gViewContent.view.frame = CGRectMake(0,0,KScreenWidth,KScreenHeight)
        self.view .addSubview(gViewContent.view)
        addChildViewController(gViewContent)
        
        
        let nib: UINib = UINib(nibName: "FanFouImageCellView", bundle: NSBundle.mainBundle())
        gViewContent.tableView.registerNib(nib, forCellReuseIdentifier: "FanFouImageCellView")
        
    }
    
    func tableViewHttpLoadSuccess(tableView:UITableView!,json:AnyObject!)-> [AnyObject]{
        //替换@ A标签
        var gDataSource = [AnyObject]()
        if let JSON :NSArray = json as? NSArray {
            
            for(var index = 0; index < JSON.count ; index++) {
                let temp: NSMutableDictionary = NSMutableDictionary()
                temp.setDictionary(JSON[index] as! [NSObject : AnyObject])
                
                temp["text"] = NSString.getText(JSON[index])
                gDataSource.append(temp)
            }
            
            tprint("JSON: \(JSON)")
        }
        return gDataSource
    }
    
    func tableViewHeightForRowAtIndexPath(tableView: UITableView!,indexPath: NSIndexPath!,dict:AnyObject!)-> CGFloat{
        let image  = dict["photo"]
        if (image === nil){
            return tableView.dg_heightForCellWithIdentifier("FanFouCellView", indexPath: indexPath,configuration: { (cell) -> Void in
                let cell = cell as! BaseTableViewCell
                cell.gDict = dict
            })
        }else{
            return tableView.dg_heightForCellWithIdentifier("FanFouImageCellView", indexPath: indexPath,configuration: { (cell) -> Void in
                let cell = cell as! BaseTableViewCell
                cell.gDict = dict
            })
        }

    }
    
    func tableViewCellForRowAtIndexPath(tableView: UITableView!,indexPath: NSIndexPath!,dict:AnyObject!) -> UITableViewCell!{
        let image  = dict["photo"]
        if (image === nil){
            let cell = tableView.dequeueReusableCellWithIdentifier("FanFouCellView", forIndexPath: indexPath)as!BaseTableViewCell
            cell.selectionStyle = UITableViewCellSelectionStyle.None
            cell.gDict = dict as! NSDictionary
            cell.delegate = self
            return cell
        }
        else{
            let cell = tableView.dequeueReusableCellWithIdentifier("FanFouImageCellView", forIndexPath: indexPath)as!BaseTableViewCell
            cell.selectionStyle = UITableViewCellSelectionStyle.None
            cell.gDict = dict as! NSDictionary
            cell.delegate = self
            return cell
        }
    }
    
    func tableViewDidSelectRowAtIndexPath(tableView: UITableView!,indexPath: NSIndexPath!,dict:AnyObject!){
         let controller = UIDetailVController()
         controller.gDict = dict as? Dictionary<String,AnyObject>
         pushViewController(controller,animated: true)
    }
    
    func swipeTableCell(cell: MGSwipeTableCell!, canSwipe direction: MGSwipeDirection) -> Bool {
        return true
    }
    
    func swipeTableCell(cell: MGSwipeTableCell!, swipeButtonsForDirection direction: MGSwipeDirection, swipeSettings: MGSwipeSettings!, expansionSettings: MGSwipeExpansionSettings!) -> [AnyObject]! {
         expansionSettings.buttonIndex = 0
        if (direction == MGSwipeDirection.RightToLeft){
            let data = (cell as!BaseTableViewCell).gDict
            
            let isSelf = data["is_self"] as! Bool
            var zhuan:MGSwipeButton?
            if isSelf==true{
                zhuan =  MGSwipeButton(title: "删除", backgroundColor: UIColor.redColor(), padding:15,callback: {
                (sender: MGSwipeTableCell!) -> Bool in
            
                   return true
                })
            }else{
                zhuan =  MGSwipeButton(title: "收藏", backgroundColor: UIColor.redColor(), padding:15,callback: {
                    (sender: MGSwipeTableCell!) -> Bool in
                    
                    return true
                })
            }
            let replay =  MGSwipeButton(title: "回复", backgroundColor: UIColor(red: 156/255.0, green: 211/255, blue: 224/255, alpha: 1.0) , padding:15,callback: {
                (sender: MGSwipeTableCell!) -> Bool in
                
                return true
            })
            let delete =  MGSwipeButton(title: "转发", backgroundColor: UIColor.lightGrayColor(), padding:15,callback: {
                (sender: MGSwipeTableCell!) -> Bool in
                
                return true
            })
            return [zhuan!,replay,delete]
        }
        return nil
    }
    
    override func rightButtonTouch(){
        let controller = UIUploadViewController()
        pushViewController(controller,animated: true)
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
}
